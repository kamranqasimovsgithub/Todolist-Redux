{"ast":null,"code":"import { ADD, MARKED, CLEAR } from \"../actions\";\nconst INITIAL_STATE = {\n  list: [{\n    id: 1,\n    heading: \"Shopping\",\n    completed: false\n  }, {\n    id: 2,\n    heading: \"Pay\",\n    completed: true\n  }, {\n    id: 3,\n    heading: \"Read\",\n    completed: false\n  }]\n};\nexport const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD:\n      return { ...state,\n        list: [...state.list, {\n          id: state.list.length + 1,\n          heading: action.payload,\n          completed: false\n        }]\n      };\n\n    case MARKED:\n      return { ...state,\n        liste: state.list.map(item => item.id === action.payload ? { ...item,\n          completed: !item.completed\n        } : item)\n      };\n\n    case CLEAR:\n      return { ...state,\n        list: state.list.filter(item => item.completed !== true)\n      };\n\n    default:\n      return state;\n  }\n\n  return state;\n};","map":{"version":3,"names":["ADD","MARKED","CLEAR","INITIAL_STATE","list","id","heading","completed","reducer","state","action","type","length","payload","liste","map","item","filter"],"sources":["C:/Users/Lenova/Desktop/todolist-react/src/reducers/index.js"],"sourcesContent":["import { ADD, MARKED, CLEAR } from \"../actions\";\r\n\r\nconst INITIAL_STATE = {\r\n    list: [\r\n        { id: 1, heading: \"Shopping\", completed: false},\r\n        { id: 2, heading: \"Pay\", completed: true},\r\n        { id: 3, heading: \"Read\", completed: false}\r\n    ]\r\n};\r\n\r\nexport const reducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case ADD:\r\n            return {\r\n                ...state, list: [\r\n                    ...state.list, \r\n                    {\r\n                        id: state.list.length + 1,\r\n                        heading: action.payload,\r\n                        completed: false\r\n                    }\r\n                ]\r\n            }\r\n        case MARKED:\r\n            return {\r\n                ...state, \r\n                liste: state.list.map(item => item.id === action.payload \r\n                ? {...item, completed: !item.completed }\r\n                : item )\r\n            }\r\n        case CLEAR:\r\n            return {\r\n                ...state, \r\n                list: state.list.filter(item => item.completed !== true )\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n    return state;\r\n}"],"mappings":"AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,KAAtB,QAAmC,YAAnC;AAEA,MAAMC,aAAa,GAAG;EAClBC,IAAI,EAAE,CACF;IAAEC,EAAE,EAAE,CAAN;IAASC,OAAO,EAAE,UAAlB;IAA8BC,SAAS,EAAE;EAAzC,CADE,EAEF;IAAEF,EAAE,EAAE,CAAN;IAASC,OAAO,EAAE,KAAlB;IAAyBC,SAAS,EAAE;EAApC,CAFE,EAGF;IAAEF,EAAE,EAAE,CAAN;IAASC,OAAO,EAAE,MAAlB;IAA0BC,SAAS,EAAE;EAArC,CAHE;AADY,CAAtB;AAQA,OAAO,MAAMC,OAAO,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BN,aAA0B;EAAA,IAAXO,MAAW;;EACtD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAKX,GAAL;MACI,OAAO,EACH,GAAGS,KADA;QACOL,IAAI,EAAE,CACZ,GAAGK,KAAK,CAACL,IADG,EAEZ;UACIC,EAAE,EAAEI,KAAK,CAACL,IAAN,CAAWQ,MAAX,GAAoB,CAD5B;UAEIN,OAAO,EAAEI,MAAM,CAACG,OAFpB;UAGIN,SAAS,EAAE;QAHf,CAFY;MADb,CAAP;;IAUJ,KAAKN,MAAL;MACI,OAAO,EACH,GAAGQ,KADA;QAEHK,KAAK,EAAEL,KAAK,CAACL,IAAN,CAAWW,GAAX,CAAeC,IAAI,IAAIA,IAAI,CAACX,EAAL,KAAYK,MAAM,CAACG,OAAnB,GAC5B,EAAC,GAAGG,IAAJ;UAAUT,SAAS,EAAE,CAACS,IAAI,CAACT;QAA3B,CAD4B,GAE5BS,IAFK;MAFJ,CAAP;;IAMJ,KAAKd,KAAL;MACI,OAAO,EACH,GAAGO,KADA;QAEHL,IAAI,EAAEK,KAAK,CAACL,IAAN,CAAWa,MAAX,CAAkBD,IAAI,IAAIA,IAAI,CAACT,SAAL,KAAmB,IAA7C;MAFH,CAAP;;IAIJ;MACI,OAAOE,KAAP;EAzBR;;EA6BA,OAAOA,KAAP;AACH,CA/BM"},"metadata":{},"sourceType":"module"}